// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/middleware/authn/provider.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	authn "github.com/equinor/radix-log-api/api/middleware/authn"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthenticationProvider is a mock of AuthenticationProvider interface.
type MockAuthenticationProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAuthenticationProviderMockRecorder
}

// MockAuthenticationProviderMockRecorder is the mock recorder for MockAuthenticationProvider.
type MockAuthenticationProviderMockRecorder struct {
	mock *MockAuthenticationProvider
}

// NewMockAuthenticationProvider creates a new mock instance.
func NewMockAuthenticationProvider(ctrl *gomock.Controller) *MockAuthenticationProvider {
	mock := &MockAuthenticationProvider{ctrl: ctrl}
	mock.recorder = &MockAuthenticationProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthenticationProvider) EXPECT() *MockAuthenticationProviderMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockAuthenticationProvider) Authenticate(req *http.Request) (authn.TokenPrincipal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", req)
	ret0, _ := ret[0].(authn.TokenPrincipal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockAuthenticationProviderMockRecorder) Authenticate(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockAuthenticationProvider)(nil).Authenticate), req)
}
