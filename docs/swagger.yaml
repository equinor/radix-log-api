basePath: /api/v1
definitions:
  errors.Status:
    properties:
      message:
        type: string
      reason:
        type: string
    type: object
  models.Container:
    properties:
      creationTimestamp:
        example: "2023-01-31T08:00:00Z"
        type: string
      id:
        example: d40ba550f05b252da60e5b873c32204368ecb5b9e17ea123738d318be4e5295b
        type: string
      lastKnown:
        example: "2023-01-31T08:00:00Z"
        type: string
      name:
        example: web
        type: string
    type: object
  models.InventoryResponse:
    properties:
      replicas:
        items:
          $ref: '#/definitions/models.Replica'
        type: array
    type: object
  models.Replica:
    properties:
      containers:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      creationTimestamp:
        example: "2023-01-31T08:00:00Z"
        type: string
      lastKnown:
        example: "2023-01-31T08:00:00Z"
        type: string
      name:
        example: web-7db5f9c99b-nwn2w
        type: string
    type: object
info:
  contact: {}
paths:
  /applications/{appName}/environments/{envName}/components/{componentName}:
    get:
      operationId: getComponentInventory
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get inventory (pods and containers) for a component
      tags:
      - Inventory
  /applications/{appName}/environments/{envName}/components/{componentName}/log:
    get:
      operationId: getComponentLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a component
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{replicaName}/containers/{containerId}/log:
    get:
      operationId: getComponentContainerLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Container ID
        in: path
        name: containerId
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a component container
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{replicaName}/log:
    get:
      operationId: getComponentReplicaLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a component replica
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/jobs/{jobName}:
    get:
      operationId: getJobInventory
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Job Component Name
        in: path
        name: jobComponentName
        required: true
        type: string
      - description: Job Name
        in: path
        name: jobName
        required: true
        type: string
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get inventory (pods and containers) for a job
      tags:
      - Inventory
  /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/jobs/{jobName}/log:
    get:
      operationId: getJobLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Job Component Name
        in: path
        name: jobComponentName
        required: true
        type: string
      - description: Job Name
        in: path
        name: jobName
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a job
      tags:
      - Logs
  ? /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/jobs/{jobName}/replicas/{replicaName}/containers/{containerId}/log
  : get:
      operationId: getJobContainerLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Job Component Name
        in: path
        name: jobComponentName
        required: true
        type: string
      - description: Job Name
        in: path
        name: jobName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Container ID
        in: path
        name: containerId
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a job container
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/jobcomponents/{jobComponentName}/jobs/{jobName}/replicas/{replicaName}/log:
    get:
      operationId: getJobReplicaLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Job Component Name
        in: path
        name: jobComponentName
        required: true
        type: string
      - description: Job Name
        in: path
        name: jobName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a job replica
      tags:
      - Logs
  /applications/{appName}/pipelinejobs/{pipelineJobName}:
    get:
      operationId: getPipelineJobInventory
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Pipeline Job Name
        in: path
        name: pipelineJobName
        required: true
        type: string
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InventoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get inventory (pods and containers) for a pipeline job
      tags:
      - Inventory
  /applications/{appName}/pipelinejobs/{pipelineJobName}/replicas/{replicaName}/containers/{containerId}/log:
    get:
      operationId: getPipelineJobContainerLog
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Pipeline Job Name
        in: path
        name: pipelineJobName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Container ID
        in: path
        name: containerId
        required: true
        type: string
      - description: Number of rows to return from the tail of the log
        example: 100
        in: query
        name: tail
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      - description: Response as attachment
        in: query
        name: file
        type: boolean
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Status'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Status'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Status'
      security:
      - ApiKeyAuth: []
      summary: Get log for a pipeline job container
      tags:
      - Logs
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: Bearer is currently not supported by go-swag. Use "Bearer <JWT>"
      in value.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
