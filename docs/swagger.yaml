basePath: /api/v1
info:
  contact: {}
paths:
  /applications/{appName}/environments/{envName}/components/{componentName}:
    get:
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get inventory (pods and their containers) for a component
      tags:
      - Inventory
  /applications/{appName}/environments/{envName}/components/{componentName}/logs:
    get:
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Number of rows to return in descending order by log time
        example: 100
        in: query
        name: rows
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get log for a component
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{replicaName}/containers/{containerId}/logs:
    get:
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Container ID
        in: path
        name: containerId
        required: true
        type: string
      - description: Number of rows to return in descending order by log time
        example: 100
        in: query
        name: rows
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get log for a container
      tags:
      - Logs
  /applications/{appName}/environments/{envName}/components/{componentName}/replicas/{replicaName}/logs:
    get:
      parameters:
      - description: Application Name
        in: path
        name: appName
        required: true
        type: string
      - description: Environment Name
        in: path
        name: envName
        required: true
        type: string
      - description: Component Name
        in: path
        name: componentName
        required: true
        type: string
      - description: Replica Name
        in: path
        name: replicaName
        required: true
        type: string
      - description: Number of rows to return in descending order by log time
        example: 100
        in: query
        name: rows
        type: integer
      - description: Start time
        example: "2023-05-01T08:15:00+02:00"
        format: date-time
        in: query
        name: start
        type: string
      - description: End time
        example: "2023-05-02T12:00:00Z"
        format: date-time
        in: query
        name: end
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get log for a replica
      tags:
      - Logs
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: Bearer is currently not supported by go-swag. Use "Bearer <JWT>"
      in value.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
