// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/middleware/authn/jwt_validator.go

// Package authn is a generated GoMock package.
package authn

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJwtValidator is a mock of JwtValidator interface.
type MockJwtValidator struct {
	ctrl     *gomock.Controller
	recorder *MockJwtValidatorMockRecorder
}

// MockJwtValidatorMockRecorder is the mock recorder for MockJwtValidator.
type MockJwtValidatorMockRecorder struct {
	mock *MockJwtValidator
}

// NewMockJwtValidator creates a new mock instance.
func NewMockJwtValidator(ctrl *gomock.Controller) *MockJwtValidator {
	mock := &MockJwtValidator{ctrl: ctrl}
	mock.recorder = &MockJwtValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtValidator) EXPECT() *MockJwtValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockJwtValidator) Validate(ctx context.Context, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockJwtValidatorMockRecorder) Validate(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockJwtValidator)(nil).Validate), ctx, token)
}
